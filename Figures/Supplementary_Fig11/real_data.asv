clc;
clear;
close all;

%% load data
load('data_genetic_oscillator')

%% parameters
num_data = 8;
num_component = 2;

%% spline fit
t_fit = linspace(0,1,201).';
time_interval = 1/200;
data_spline = zeros(length(t_fit),num_component,num_data);
for i = 1:num_data
    y_tmp = reshape(data_total(:,:,i),[num_component, length(time)]);
    y_tmp = y_tmp .';
    
    y_int = zeros(length(t_fit),num_component);
    for j = 1:2
        y_int(:,j) = spline(time, y_tmp(:,j), t_fit);
    end 
    data_spline(:,:,i) = y_int;
end


%% compute RDF X,Y -> X+Y
thres_noise = 1e-5;
I_total_XY = zeros(num_data,length(t_fit),length(t_fit), 2);
Y_trans = zeros(num_data, length(t_fit));

for i = 1:num_data
    % import time series
    y_tmp = reshape(data_spline(:,:,i),[length(time), num_component]);

    % import single time series
    cause_1 = y_tmp(:,1);
    cause_2 = y_tmp(:,2);
    target = y_tmp(:,1) + y_tmp(:,2);

    % compute RDf for the regulation from X to Y
    [score_list, t_1, t_2] = RDS_dim2(cause_1, cause_2, target, t_fit, time_interval);
    for k = 3:4
        score = reshape(score_list(:,:,k),[length(t_target),length(t_target)]);
        I_total_XY(i,:,:,k) = score;            
    end

    % save the value of Y
    Y_trans(i,:) = cause_2;
end

%% transform (t,t*) into X(t),X(t*)
trans_total_XY = cell(num_data,2);

for i = 1:num_data
    score_XY_pos = reshape(I_total_XY(i,:,:,1), [length(t_fit), length(t_fit)]);
    score_XY_neg = reshape(I_total_XY(i,:,:,2), [length(t_fit), length(t_fit)]);

    Y_var = Y_trans(i,:);
    
    trans_XY_pos = [];
    trans_XY_neg = [];

    for m = 1:length(t_fit)
        for n = 1:length(t_fit)
            if abs(score_XY_pos(m,n)) > thres_noise
                trans_XY_pos = [trans_XY_pos ; [Y_var(m), Y_var(n), score_XY_pos(m,n)]];
            end
            if abs(score_XY_neg(m,n)) > thres_noise
                trans_XY_neg = [trans_XY_neg ; [Y_var(m), Y_var(n), score_XY_neg(m,n)]];
            end
        end
    end        
    trans_total_XY{i,1} = trans_XY_pos;
    trans_total_XY{i,2} = trans_XY_neg;
end

%% plot
figure(1)
for i = 1:num_data
        trans_XY_pos = cell2mat(trans_total_XY(i,j,1));
        trans_XY_neg = cell2mat(trans_total_XY(i,j,2));
        
        if isempty(trans_XY_pos)
            continue
        end
        
        if isempty(find(trans_XY_pos(:,3) > 0)) || isempty(find(trans_XY_pos(:,3) < 0))
            continue
        end
        if isempty(trans_XY_neg)
            continue
        end
        
        if isempty(find(trans_XY_neg(:,3) > 0)) || isempty(find(trans_XY_neg(:,3) < 0))
            continue
        end
        
        loca_pos = find(trans_XY_pos(:,3) > 0);
        loca_neg = find(trans_XY_pos(:,3) < 0);
        
        alpha = 0.002;
        
        subplot(4,5,j)
        scatter(trans_XY_pos(loca_pos,1),trans_XY_pos(loca_pos,2),'MarkerFaceColor','b','MarkerEdgeColor','b','MarkerFaceAlpha',alpha,'MarkerEdgeAlpha',alpha)
        hold on
        scatter(trans_XY_pos(loca_neg,1),trans_XY_pos(loca_neg,2),'MarkerFaceColor','r','MarkerEdgeColor','r','MarkerFaceAlpha',alpha,'MarkerEdgeAlpha',alpha)
        hold on
        
        loca_pos = find(trans_XY_neg(:,3) > 0);
        loca_neg = find(trans_XY_neg(:,3) < 0);

        scatter(trans_XY_neg(loca_pos,1),trans_XY_neg(loca_pos,2),'MarkerFaceColor','b','MarkerEdgeColor','b','MarkerFaceAlpha',alpha,'MarkerEdgeAlpha',alpha)
        hold on
        scatter(trans_XY_neg(loca_neg,1),trans_XY_neg(loca_neg,2),'MarkerFaceColor','r','MarkerEdgeColor','r','MarkerFaceAlpha',alpha,'MarkerEdgeAlpha',alpha)
        hold on

end
